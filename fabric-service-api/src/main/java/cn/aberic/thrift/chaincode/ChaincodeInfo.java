/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.aberic.thrift.chaincode;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-06-22")
public class ChaincodeInfo implements org.apache.thrift.TBase<ChaincodeInfo, ChaincodeInfo._Fields>, java.io.Serializable, Cloneable, Comparable<ChaincodeInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ChaincodeInfo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("path", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PROPOSAL_WAIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("proposalWaitTime", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField INVOKE_WAIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("invokeWaitTime", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CHANNEL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("channelId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("date", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CHANNEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PEER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("peerName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ORG_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("orgName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField LEAGUE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("leagueName", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ChaincodeInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ChaincodeInfoTupleSchemeFactory();

  public int id; // required
  public java.lang.String name; // required
  public java.lang.String path; // required
  public java.lang.String version; // required
  public int proposalWaitTime; // required
  public int invokeWaitTime; // required
  public int channelId; // required
  public java.lang.String date; // optional
  public java.lang.String channelName; // optional
  public java.lang.String peerName; // optional
  public java.lang.String orgName; // optional
  public java.lang.String leagueName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    PATH((short)3, "path"),
    VERSION((short)4, "version"),
    PROPOSAL_WAIT_TIME((short)5, "proposalWaitTime"),
    INVOKE_WAIT_TIME((short)6, "invokeWaitTime"),
    CHANNEL_ID((short)7, "channelId"),
    DATE((short)8, "date"),
    CHANNEL_NAME((short)9, "channelName"),
    PEER_NAME((short)10, "peerName"),
    ORG_NAME((short)11, "orgName"),
    LEAGUE_NAME((short)12, "leagueName");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // PATH
          return PATH;
        case 4: // VERSION
          return VERSION;
        case 5: // PROPOSAL_WAIT_TIME
          return PROPOSAL_WAIT_TIME;
        case 6: // INVOKE_WAIT_TIME
          return INVOKE_WAIT_TIME;
        case 7: // CHANNEL_ID
          return CHANNEL_ID;
        case 8: // DATE
          return DATE;
        case 9: // CHANNEL_NAME
          return CHANNEL_NAME;
        case 10: // PEER_NAME
          return PEER_NAME;
        case 11: // ORG_NAME
          return ORG_NAME;
        case 12: // LEAGUE_NAME
          return LEAGUE_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PROPOSALWAITTIME_ISSET_ID = 1;
  private static final int __INVOKEWAITTIME_ISSET_ID = 2;
  private static final int __CHANNELID_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DATE,_Fields.CHANNEL_NAME,_Fields.PEER_NAME,_Fields.ORG_NAME,_Fields.LEAGUE_NAME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PATH, new org.apache.thrift.meta_data.FieldMetaData("path", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROPOSAL_WAIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("proposalWaitTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INVOKE_WAIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("invokeWaitTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHANNEL_ID, new org.apache.thrift.meta_data.FieldMetaData("channelId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DATE, new org.apache.thrift.meta_data.FieldMetaData("date", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PEER_NAME, new org.apache.thrift.meta_data.FieldMetaData("peerName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORG_NAME, new org.apache.thrift.meta_data.FieldMetaData("orgName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEAGUE_NAME, new org.apache.thrift.meta_data.FieldMetaData("leagueName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ChaincodeInfo.class, metaDataMap);
  }

  public ChaincodeInfo() {
  }

  public ChaincodeInfo(
    int id,
    java.lang.String name,
    java.lang.String path,
    java.lang.String version,
    int proposalWaitTime,
    int invokeWaitTime,
    int channelId)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.path = path;
    this.version = version;
    this.proposalWaitTime = proposalWaitTime;
    setProposalWaitTimeIsSet(true);
    this.invokeWaitTime = invokeWaitTime;
    setInvokeWaitTimeIsSet(true);
    this.channelId = channelId;
    setChannelIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ChaincodeInfo(ChaincodeInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPath()) {
      this.path = other.path;
    }
    if (other.isSetVersion()) {
      this.version = other.version;
    }
    this.proposalWaitTime = other.proposalWaitTime;
    this.invokeWaitTime = other.invokeWaitTime;
    this.channelId = other.channelId;
    if (other.isSetDate()) {
      this.date = other.date;
    }
    if (other.isSetChannelName()) {
      this.channelName = other.channelName;
    }
    if (other.isSetPeerName()) {
      this.peerName = other.peerName;
    }
    if (other.isSetOrgName()) {
      this.orgName = other.orgName;
    }
    if (other.isSetLeagueName()) {
      this.leagueName = other.leagueName;
    }
  }

  public ChaincodeInfo deepCopy() {
    return new ChaincodeInfo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.path = null;
    this.version = null;
    setProposalWaitTimeIsSet(false);
    this.proposalWaitTime = 0;
    setInvokeWaitTimeIsSet(false);
    this.invokeWaitTime = 0;
    setChannelIdIsSet(false);
    this.channelId = 0;
    this.date = null;
    this.channelName = null;
    this.peerName = null;
    this.orgName = null;
    this.leagueName = null;
  }

  public int getId() {
    return this.id;
  }

  public ChaincodeInfo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public ChaincodeInfo setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getPath() {
    return this.path;
  }

  public ChaincodeInfo setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  public void unsetPath() {
    this.path = null;
  }

  /** Returns true if field path is set (has been assigned a value) and false otherwise */
  public boolean isSetPath() {
    return this.path != null;
  }

  public void setPathIsSet(boolean value) {
    if (!value) {
      this.path = null;
    }
  }

  public java.lang.String getVersion() {
    return this.version;
  }

  public ChaincodeInfo setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  public void unsetVersion() {
    this.version = null;
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return this.version != null;
  }

  public void setVersionIsSet(boolean value) {
    if (!value) {
      this.version = null;
    }
  }

  public int getProposalWaitTime() {
    return this.proposalWaitTime;
  }

  public ChaincodeInfo setProposalWaitTime(int proposalWaitTime) {
    this.proposalWaitTime = proposalWaitTime;
    setProposalWaitTimeIsSet(true);
    return this;
  }

  public void unsetProposalWaitTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROPOSALWAITTIME_ISSET_ID);
  }

  /** Returns true if field proposalWaitTime is set (has been assigned a value) and false otherwise */
  public boolean isSetProposalWaitTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROPOSALWAITTIME_ISSET_ID);
  }

  public void setProposalWaitTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROPOSALWAITTIME_ISSET_ID, value);
  }

  public int getInvokeWaitTime() {
    return this.invokeWaitTime;
  }

  public ChaincodeInfo setInvokeWaitTime(int invokeWaitTime) {
    this.invokeWaitTime = invokeWaitTime;
    setInvokeWaitTimeIsSet(true);
    return this;
  }

  public void unsetInvokeWaitTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INVOKEWAITTIME_ISSET_ID);
  }

  /** Returns true if field invokeWaitTime is set (has been assigned a value) and false otherwise */
  public boolean isSetInvokeWaitTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INVOKEWAITTIME_ISSET_ID);
  }

  public void setInvokeWaitTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INVOKEWAITTIME_ISSET_ID, value);
  }

  public int getChannelId() {
    return this.channelId;
  }

  public ChaincodeInfo setChannelId(int channelId) {
    this.channelId = channelId;
    setChannelIdIsSet(true);
    return this;
  }

  public void unsetChannelId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  /** Returns true if field channelId is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHANNELID_ISSET_ID);
  }

  public void setChannelIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHANNELID_ISSET_ID, value);
  }

  public java.lang.String getDate() {
    return this.date;
  }

  public ChaincodeInfo setDate(java.lang.String date) {
    this.date = date;
    return this;
  }

  public void unsetDate() {
    this.date = null;
  }

  /** Returns true if field date is set (has been assigned a value) and false otherwise */
  public boolean isSetDate() {
    return this.date != null;
  }

  public void setDateIsSet(boolean value) {
    if (!value) {
      this.date = null;
    }
  }

  public java.lang.String getChannelName() {
    return this.channelName;
  }

  public ChaincodeInfo setChannelName(java.lang.String channelName) {
    this.channelName = channelName;
    return this;
  }

  public void unsetChannelName() {
    this.channelName = null;
  }

  /** Returns true if field channelName is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelName() {
    return this.channelName != null;
  }

  public void setChannelNameIsSet(boolean value) {
    if (!value) {
      this.channelName = null;
    }
  }

  public java.lang.String getPeerName() {
    return this.peerName;
  }

  public ChaincodeInfo setPeerName(java.lang.String peerName) {
    this.peerName = peerName;
    return this;
  }

  public void unsetPeerName() {
    this.peerName = null;
  }

  /** Returns true if field peerName is set (has been assigned a value) and false otherwise */
  public boolean isSetPeerName() {
    return this.peerName != null;
  }

  public void setPeerNameIsSet(boolean value) {
    if (!value) {
      this.peerName = null;
    }
  }

  public java.lang.String getOrgName() {
    return this.orgName;
  }

  public ChaincodeInfo setOrgName(java.lang.String orgName) {
    this.orgName = orgName;
    return this;
  }

  public void unsetOrgName() {
    this.orgName = null;
  }

  /** Returns true if field orgName is set (has been assigned a value) and false otherwise */
  public boolean isSetOrgName() {
    return this.orgName != null;
  }

  public void setOrgNameIsSet(boolean value) {
    if (!value) {
      this.orgName = null;
    }
  }

  public java.lang.String getLeagueName() {
    return this.leagueName;
  }

  public ChaincodeInfo setLeagueName(java.lang.String leagueName) {
    this.leagueName = leagueName;
    return this;
  }

  public void unsetLeagueName() {
    this.leagueName = null;
  }

  /** Returns true if field leagueName is set (has been assigned a value) and false otherwise */
  public boolean isSetLeagueName() {
    return this.leagueName != null;
  }

  public void setLeagueNameIsSet(boolean value) {
    if (!value) {
      this.leagueName = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case PATH:
      if (value == null) {
        unsetPath();
      } else {
        setPath((java.lang.String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((java.lang.String)value);
      }
      break;

    case PROPOSAL_WAIT_TIME:
      if (value == null) {
        unsetProposalWaitTime();
      } else {
        setProposalWaitTime((java.lang.Integer)value);
      }
      break;

    case INVOKE_WAIT_TIME:
      if (value == null) {
        unsetInvokeWaitTime();
      } else {
        setInvokeWaitTime((java.lang.Integer)value);
      }
      break;

    case CHANNEL_ID:
      if (value == null) {
        unsetChannelId();
      } else {
        setChannelId((java.lang.Integer)value);
      }
      break;

    case DATE:
      if (value == null) {
        unsetDate();
      } else {
        setDate((java.lang.String)value);
      }
      break;

    case CHANNEL_NAME:
      if (value == null) {
        unsetChannelName();
      } else {
        setChannelName((java.lang.String)value);
      }
      break;

    case PEER_NAME:
      if (value == null) {
        unsetPeerName();
      } else {
        setPeerName((java.lang.String)value);
      }
      break;

    case ORG_NAME:
      if (value == null) {
        unsetOrgName();
      } else {
        setOrgName((java.lang.String)value);
      }
      break;

    case LEAGUE_NAME:
      if (value == null) {
        unsetLeagueName();
      } else {
        setLeagueName((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case PATH:
      return getPath();

    case VERSION:
      return getVersion();

    case PROPOSAL_WAIT_TIME:
      return getProposalWaitTime();

    case INVOKE_WAIT_TIME:
      return getInvokeWaitTime();

    case CHANNEL_ID:
      return getChannelId();

    case DATE:
      return getDate();

    case CHANNEL_NAME:
      return getChannelName();

    case PEER_NAME:
      return getPeerName();

    case ORG_NAME:
      return getOrgName();

    case LEAGUE_NAME:
      return getLeagueName();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case PATH:
      return isSetPath();
    case VERSION:
      return isSetVersion();
    case PROPOSAL_WAIT_TIME:
      return isSetProposalWaitTime();
    case INVOKE_WAIT_TIME:
      return isSetInvokeWaitTime();
    case CHANNEL_ID:
      return isSetChannelId();
    case DATE:
      return isSetDate();
    case CHANNEL_NAME:
      return isSetChannelName();
    case PEER_NAME:
      return isSetPeerName();
    case ORG_NAME:
      return isSetOrgName();
    case LEAGUE_NAME:
      return isSetLeagueName();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ChaincodeInfo)
      return this.equals((ChaincodeInfo)that);
    return false;
  }

  public boolean equals(ChaincodeInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_path = true && this.isSetPath();
    boolean that_present_path = true && that.isSetPath();
    if (this_present_path || that_present_path) {
      if (!(this_present_path && that_present_path))
        return false;
      if (!this.path.equals(that.path))
        return false;
    }

    boolean this_present_version = true && this.isSetVersion();
    boolean that_present_version = true && that.isSetVersion();
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (!this.version.equals(that.version))
        return false;
    }

    boolean this_present_proposalWaitTime = true;
    boolean that_present_proposalWaitTime = true;
    if (this_present_proposalWaitTime || that_present_proposalWaitTime) {
      if (!(this_present_proposalWaitTime && that_present_proposalWaitTime))
        return false;
      if (this.proposalWaitTime != that.proposalWaitTime)
        return false;
    }

    boolean this_present_invokeWaitTime = true;
    boolean that_present_invokeWaitTime = true;
    if (this_present_invokeWaitTime || that_present_invokeWaitTime) {
      if (!(this_present_invokeWaitTime && that_present_invokeWaitTime))
        return false;
      if (this.invokeWaitTime != that.invokeWaitTime)
        return false;
    }

    boolean this_present_channelId = true;
    boolean that_present_channelId = true;
    if (this_present_channelId || that_present_channelId) {
      if (!(this_present_channelId && that_present_channelId))
        return false;
      if (this.channelId != that.channelId)
        return false;
    }

    boolean this_present_date = true && this.isSetDate();
    boolean that_present_date = true && that.isSetDate();
    if (this_present_date || that_present_date) {
      if (!(this_present_date && that_present_date))
        return false;
      if (!this.date.equals(that.date))
        return false;
    }

    boolean this_present_channelName = true && this.isSetChannelName();
    boolean that_present_channelName = true && that.isSetChannelName();
    if (this_present_channelName || that_present_channelName) {
      if (!(this_present_channelName && that_present_channelName))
        return false;
      if (!this.channelName.equals(that.channelName))
        return false;
    }

    boolean this_present_peerName = true && this.isSetPeerName();
    boolean that_present_peerName = true && that.isSetPeerName();
    if (this_present_peerName || that_present_peerName) {
      if (!(this_present_peerName && that_present_peerName))
        return false;
      if (!this.peerName.equals(that.peerName))
        return false;
    }

    boolean this_present_orgName = true && this.isSetOrgName();
    boolean that_present_orgName = true && that.isSetOrgName();
    if (this_present_orgName || that_present_orgName) {
      if (!(this_present_orgName && that_present_orgName))
        return false;
      if (!this.orgName.equals(that.orgName))
        return false;
    }

    boolean this_present_leagueName = true && this.isSetLeagueName();
    boolean that_present_leagueName = true && that.isSetLeagueName();
    if (this_present_leagueName || that_present_leagueName) {
      if (!(this_present_leagueName && that_present_leagueName))
        return false;
      if (!this.leagueName.equals(that.leagueName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetPath()) ? 131071 : 524287);
    if (isSetPath())
      hashCode = hashCode * 8191 + path.hashCode();

    hashCode = hashCode * 8191 + ((isSetVersion()) ? 131071 : 524287);
    if (isSetVersion())
      hashCode = hashCode * 8191 + version.hashCode();

    hashCode = hashCode * 8191 + proposalWaitTime;

    hashCode = hashCode * 8191 + invokeWaitTime;

    hashCode = hashCode * 8191 + channelId;

    hashCode = hashCode * 8191 + ((isSetDate()) ? 131071 : 524287);
    if (isSetDate())
      hashCode = hashCode * 8191 + date.hashCode();

    hashCode = hashCode * 8191 + ((isSetChannelName()) ? 131071 : 524287);
    if (isSetChannelName())
      hashCode = hashCode * 8191 + channelName.hashCode();

    hashCode = hashCode * 8191 + ((isSetPeerName()) ? 131071 : 524287);
    if (isSetPeerName())
      hashCode = hashCode * 8191 + peerName.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrgName()) ? 131071 : 524287);
    if (isSetOrgName())
      hashCode = hashCode * 8191 + orgName.hashCode();

    hashCode = hashCode * 8191 + ((isSetLeagueName()) ? 131071 : 524287);
    if (isSetLeagueName())
      hashCode = hashCode * 8191 + leagueName.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ChaincodeInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPath()).compareTo(other.isSetPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.path, other.path);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProposalWaitTime()).compareTo(other.isSetProposalWaitTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProposalWaitTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proposalWaitTime, other.proposalWaitTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInvokeWaitTime()).compareTo(other.isSetInvokeWaitTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvokeWaitTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invokeWaitTime, other.invokeWaitTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChannelId()).compareTo(other.isSetChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelId, other.channelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDate()).compareTo(other.isSetDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.date, other.date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChannelName()).compareTo(other.isSetChannelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelName, other.channelName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPeerName()).compareTo(other.isSetPeerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPeerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.peerName, other.peerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrgName()).compareTo(other.isSetOrgName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrgName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orgName, other.orgName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLeagueName()).compareTo(other.isSetLeagueName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLeagueName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.leagueName, other.leagueName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ChaincodeInfo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("path:");
    if (this.path == null) {
      sb.append("null");
    } else {
      sb.append(this.path);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    if (this.version == null) {
      sb.append("null");
    } else {
      sb.append(this.version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("proposalWaitTime:");
    sb.append(this.proposalWaitTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("invokeWaitTime:");
    sb.append(this.invokeWaitTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelId:");
    sb.append(this.channelId);
    first = false;
    if (isSetDate()) {
      if (!first) sb.append(", ");
      sb.append("date:");
      if (this.date == null) {
        sb.append("null");
      } else {
        sb.append(this.date);
      }
      first = false;
    }
    if (isSetChannelName()) {
      if (!first) sb.append(", ");
      sb.append("channelName:");
      if (this.channelName == null) {
        sb.append("null");
      } else {
        sb.append(this.channelName);
      }
      first = false;
    }
    if (isSetPeerName()) {
      if (!first) sb.append(", ");
      sb.append("peerName:");
      if (this.peerName == null) {
        sb.append("null");
      } else {
        sb.append(this.peerName);
      }
      first = false;
    }
    if (isSetOrgName()) {
      if (!first) sb.append(", ");
      sb.append("orgName:");
      if (this.orgName == null) {
        sb.append("null");
      } else {
        sb.append(this.orgName);
      }
      first = false;
    }
    if (isSetLeagueName()) {
      if (!first) sb.append(", ");
      sb.append("leagueName:");
      if (this.leagueName == null) {
        sb.append("null");
      } else {
        sb.append(this.leagueName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    if (path == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'path' was not present! Struct: " + toString());
    }
    if (version == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'version' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'proposalWaitTime' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'invokeWaitTime' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'channelId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ChaincodeInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChaincodeInfoStandardScheme getScheme() {
      return new ChaincodeInfoStandardScheme();
    }
  }

  private static class ChaincodeInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ChaincodeInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ChaincodeInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.path = iprot.readString();
              struct.setPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.version = iprot.readString();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROPOSAL_WAIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.proposalWaitTime = iprot.readI32();
              struct.setProposalWaitTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // INVOKE_WAIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.invokeWaitTime = iprot.readI32();
              struct.setInvokeWaitTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHANNEL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channelId = iprot.readI32();
              struct.setChannelIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.date = iprot.readString();
              struct.setDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CHANNEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelName = iprot.readString();
              struct.setChannelNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PEER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.peerName = iprot.readString();
              struct.setPeerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ORG_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orgName = iprot.readString();
              struct.setOrgNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // LEAGUE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.leagueName = iprot.readString();
              struct.setLeagueNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetProposalWaitTime()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'proposalWaitTime' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetInvokeWaitTime()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'invokeWaitTime' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetChannelId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'channelId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ChaincodeInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.path != null) {
        oprot.writeFieldBegin(PATH_FIELD_DESC);
        oprot.writeString(struct.path);
        oprot.writeFieldEnd();
      }
      if (struct.version != null) {
        oprot.writeFieldBegin(VERSION_FIELD_DESC);
        oprot.writeString(struct.version);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PROPOSAL_WAIT_TIME_FIELD_DESC);
      oprot.writeI32(struct.proposalWaitTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INVOKE_WAIT_TIME_FIELD_DESC);
      oprot.writeI32(struct.invokeWaitTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHANNEL_ID_FIELD_DESC);
      oprot.writeI32(struct.channelId);
      oprot.writeFieldEnd();
      if (struct.date != null) {
        if (struct.isSetDate()) {
          oprot.writeFieldBegin(DATE_FIELD_DESC);
          oprot.writeString(struct.date);
          oprot.writeFieldEnd();
        }
      }
      if (struct.channelName != null) {
        if (struct.isSetChannelName()) {
          oprot.writeFieldBegin(CHANNEL_NAME_FIELD_DESC);
          oprot.writeString(struct.channelName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.peerName != null) {
        if (struct.isSetPeerName()) {
          oprot.writeFieldBegin(PEER_NAME_FIELD_DESC);
          oprot.writeString(struct.peerName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orgName != null) {
        if (struct.isSetOrgName()) {
          oprot.writeFieldBegin(ORG_NAME_FIELD_DESC);
          oprot.writeString(struct.orgName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.leagueName != null) {
        if (struct.isSetLeagueName()) {
          oprot.writeFieldBegin(LEAGUE_NAME_FIELD_DESC);
          oprot.writeString(struct.leagueName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ChaincodeInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChaincodeInfoTupleScheme getScheme() {
      return new ChaincodeInfoTupleScheme();
    }
  }

  private static class ChaincodeInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ChaincodeInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ChaincodeInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.name);
      oprot.writeString(struct.path);
      oprot.writeString(struct.version);
      oprot.writeI32(struct.proposalWaitTime);
      oprot.writeI32(struct.invokeWaitTime);
      oprot.writeI32(struct.channelId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetDate()) {
        optionals.set(1);
      }
      if (struct.isSetChannelName()) {
        optionals.set(2);
      }
      if (struct.isSetPeerName()) {
        optionals.set(3);
      }
      if (struct.isSetOrgName()) {
        optionals.set(4);
      }
      if (struct.isSetLeagueName()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetDate()) {
        oprot.writeString(struct.date);
      }
      if (struct.isSetChannelName()) {
        oprot.writeString(struct.channelName);
      }
      if (struct.isSetPeerName()) {
        oprot.writeString(struct.peerName);
      }
      if (struct.isSetOrgName()) {
        oprot.writeString(struct.orgName);
      }
      if (struct.isSetLeagueName()) {
        oprot.writeString(struct.leagueName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ChaincodeInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.path = iprot.readString();
      struct.setPathIsSet(true);
      struct.version = iprot.readString();
      struct.setVersionIsSet(true);
      struct.proposalWaitTime = iprot.readI32();
      struct.setProposalWaitTimeIsSet(true);
      struct.invokeWaitTime = iprot.readI32();
      struct.setInvokeWaitTimeIsSet(true);
      struct.channelId = iprot.readI32();
      struct.setChannelIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.date = iprot.readString();
        struct.setDateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.channelName = iprot.readString();
        struct.setChannelNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.peerName = iprot.readString();
        struct.setPeerNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.orgName = iprot.readString();
        struct.setOrgNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.leagueName = iprot.readString();
        struct.setLeagueNameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

